Token=> class
Token=> Square
Token=> {
Token=> field
Token=> int
Token=> x
Token=> ,
Token=> y
Token=> ;
Token=> field
Token=> int
Token=> size
Token=> ;
Token=> constructor
Token=> Square
Token=> new
Token=> (
Token=> int
Token=> Ax
Token=> ,
Token=> int
Token=> Ay
Token=> ,
Token=> int
Token=> Asize
Token=> )
Token=> {
Token=> let
Token=> x
Token=> =
Token=> Ax
Token=> ;
Token=> let
Token=> y
Token=> =
Token=> Ay
Token=> ;
Token=> let
Token=> size
Token=> =
Token=> Asize
Token=> ;
Token=> do
Token=> draw
Token=> (
Token=> )
Token=> ;
Token=> return
Token=> x
Token=> ;
Token=> }
Token=> method
Token=> void
Token=> dispose
Token=> (
Token=> )
Token=> {
Token=> do
Token=> Memory
Token=> .
Token=> deAlloc
Token=> (
Token=> this
Token=> )
Token=> ;
Token=> return
Token=> ;
Token=> }
Token=> method
Token=> void
Token=> draw
Token=> (
Token=> )
Token=> {
Token=> do
Token=> Screen
Token=> .
Token=> setColor
Token=> (
Token=> x
Token=> )
Token=> ;
Token=> do
Token=> Screen
Token=> .
Token=> drawRectangle
Token=> (
Token=> x
Token=> ,
Token=> y
Token=> ,
Token=> x
Token=> ,
Token=> y
Token=> )
Token=> ;
Token=> return
Token=> ;
Token=> }
Token=> method
Token=> void
Token=> erase
Token=> (
Token=> )
Token=> {
Token=> do
Token=> Screen
Token=> .
Token=> setColor
Token=> (
Token=> x
Token=> )
Token=> ;
Token=> do
Token=> Screen
Token=> .
Token=> drawRectangle
Token=> (
Token=> x
Token=> ,
Token=> y
Token=> ,
Token=> x
Token=> ,
Token=> y
Token=> )
Token=> ;
Token=> return
Token=> ;
Token=> }
Token=> method
Token=> void
Token=> incSize
Token=> (
Token=> )
Token=> {
Token=> if
Token=> (
Token=> x
Token=> )
Token=> {
Token=> do
Token=> erase
Token=> (
Token=> )
Token=> ;
Token=> let
Token=> size
Token=> =
Token=> size
Token=> ;
Token=> do
Token=> draw
Token=> (
Token=> )
Token=> ;
Token=> }
Token=> return
Token=> ;
Token=> }
Token=> method
Token=> void
Token=> decSize
Token=> (
Token=> )
Token=> {
Token=> if
Token=> (
Token=> size
Token=> )
Token=> {
Token=> do
Token=> erase
Token=> (
Token=> )
Token=> ;
Token=> let
Token=> size
Token=> =
Token=> size
Token=> ;
Token=> do
Token=> draw
Token=> (
Token=> )
Token=> ;
Token=> }
Token=> return
Token=> ;
Token=> }
Token=> method
Token=> void
Token=> moveUp
Token=> (
Token=> )
Token=> {
Token=> if
Token=> (
Token=> y
Token=> )
Token=> {
Token=> do
Token=> Screen
Token=> .
Token=> setColor
Token=> (
Token=> x
Token=> )
Token=> ;
Token=> do
Token=> Screen
Token=> .
Token=> drawRectangle
Token=> (
Token=> x
Token=> ,
Token=> y
Token=> ,
Token=> x
Token=> ,
Token=> y
Token=> )
Token=> ;
Token=> let
Token=> y
Token=> =
Token=> y
Token=> ;
Token=> do
Token=> Screen
Token=> .
Token=> setColor
Token=> (
Token=> x
Token=> )
Token=> ;
Token=> do
Token=> Screen
Token=> .
Token=> drawRectangle
Token=> (
Token=> x
Token=> ,
Token=> y
Token=> ,
Token=> x
Token=> ,
Token=> y
Token=> )
Token=> ;
Token=> }
Token=> return
Token=> ;
Token=> }
Token=> method
Token=> void
Token=> moveDown
Token=> (
Token=> )
Token=> {
Token=> if
Token=> (
Token=> y
Token=> )
Token=> {
Token=> do
Token=> Screen
Token=> .
Token=> setColor
Token=> (
Token=> x
Token=> )
Token=> ;
Token=> do
Token=> Screen
Token=> .
Token=> drawRectangle
Token=> (
Token=> x
Token=> ,
Token=> y
Token=> ,
Token=> x
Token=> ,
Token=> y
Token=> )
Token=> ;
Token=> let
Token=> y
Token=> =
Token=> y
Token=> ;
Token=> do
Token=> Screen
Token=> .
Token=> setColor
Token=> (
Token=> x
Token=> )
Token=> ;
Token=> do
Token=> Screen
Token=> .
Token=> drawRectangle
Token=> (
Token=> x
Token=> ,
Token=> y
Token=> ,
Token=> x
Token=> ,
Token=> y
Token=> )
Token=> ;
Token=> }
Token=> return
Token=> ;
Token=> }
Token=> method
Token=> void
Token=> moveLeft
Token=> (
Token=> )
Token=> {
Token=> if
Token=> (
Token=> x
Token=> )
Token=> {
Token=> do
Token=> Screen
Token=> .
Token=> setColor
Token=> (
Token=> x
Token=> )
Token=> ;
Token=> do
Token=> Screen
Token=> .
Token=> drawRectangle
Token=> (
Token=> x
Token=> ,
Token=> y
Token=> ,
Token=> x
Token=> ,
Token=> y
Token=> )
Token=> ;
Token=> let
Token=> x
Token=> =
Token=> x
Token=> ;
Token=> do
Token=> Screen
Token=> .
Token=> setColor
Token=> (
Token=> x
Token=> )
Token=> ;
Token=> do
Token=> Screen
Token=> .
Token=> drawRectangle
Token=> (
Token=> x
Token=> ,
Token=> y
Token=> ,
Token=> x
Token=> ,
Token=> y
Token=> )
Token=> ;
Token=> }
Token=> return
Token=> ;
Token=> }
Token=> method
Token=> void
Token=> moveRight
Token=> (
Token=> )
Token=> {
Token=> if
Token=> (
Token=> x
Token=> )
Token=> {
Token=> do
Token=> Screen
Token=> .
Token=> setColor
Token=> (
Token=> x
Token=> )
Token=> ;
Token=> do
Token=> Screen
Token=> .
Token=> drawRectangle
Token=> (
Token=> x
Token=> ,
Token=> y
Token=> ,
Token=> x
Token=> ,
Token=> y
Token=> )
Token=> ;
Token=> let
Token=> x
Token=> =
Token=> x
Token=> ;
Token=> do
Token=> Screen
Token=> .
Token=> setColor
Token=> (
Token=> x
Token=> )
Token=> ;
Token=> do
Token=> Screen
Token=> .
Token=> drawRectangle
Token=> (
Token=> x
Token=> ,
Token=> y
Token=> ,
Token=> x
Token=> ,
Token=> y
Token=> )
Token=> ;
Token=> }
Token=> return
Token=> ;
Token=> }
Token=> }
